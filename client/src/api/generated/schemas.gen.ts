// This file is auto-generated by @hey-api/openapi-ts

export const UserDataSchema = {
    type: 'object',
    properties: {
        id: {
            type: 'string',
            example: 'user-id-1'
        },
        name: {
            type: 'string',
            example: 'Александр'
        },
        lastName: {
            type: 'string',
            example: 'Иванов'
        },
        birthdate: {
            type: 'string',
            format: 'date',
            example: '1950-07-23'
        },
        status: {
            type: 'string',
            enum: ['Начинающий', 'Опытный']
        },
        baseLocations: {
            type: 'array',
            items: {
                type: 'object',
                properties: {
                    latitude: {
                        type: 'number',
                        example: 40.712776
                    },
                    longitude: {
                        type: 'number',
                        example: -74.005974
                    },
                    district: {
                        type: 'string',
                        example: 'Центральный'
                    },
                    city: {
                        type: 'string',
                        example: 'Москва'
                    }
                }
            }
        },
        educations: {
            type: 'array',
            items: {
                type: 'object',
                properties: {
                    organizationName: {
                        type: 'string',
                        example: 'МГУ'
                    },
                    level: {
                        type: 'string',
                        enum: ['Среднее общее', 'Среднее профессиональное', 'Высшее']
                    },
                    specialization: {
                        type: 'string',
                        example: 'Филология'
                    },
                    graduationYear: {
                        type: 'integer',
                        example: 1980
                    }
                }
            }
        },
        additionalInfo: {
            type: 'string',
            example: 'Дополнительная информация о пользователе.'
        },
        contacts: {
            type: 'object',
            properties: {
                email: {
                    type: 'string',
                    format: 'email',
                    example: 'user@example.com'
                },
                phone: {
                    type: 'string',
                    example: '+123456789'
                },
                social: {
                    type: 'object',
                    properties: {
                        telegram: {
                            type: 'string',
                            example: '@user'
                        },
                        whatsapp: {
                            type: 'string',
                            example: '+123456789'
                        },
                        vk: {
                            type: 'string',
                            example: 'user_vk_id'
                        }
                    }
                }
            }
        },
        favouriteRequests: {
            type: 'array',
            items: {
                type: 'string'
            }
        }
    }
} as const;

export const HelpRequestDataSchema = {
    type: 'object',
    properties: {
        id: {
            type: 'string',
            example: 'request-id-1',
            default: ''
        },
        title: {
            type: 'string',
            example: 'Помощь в проекте'
        },
        organization: {
            type: 'object',
            properties: {
                title: {
                    type: 'string',
                    example: 'Благотворительная организация'
                },
                isVerified: {
                    type: 'boolean'
                }
            }
        },
        description: {
            type: 'string',
            example: 'Описание запроса на помощь.'
        },
        goalDescription: {
            type: 'string',
            example: 'Цель данного запроса.'
        },
        actionsSchedule: {
            type: 'array',
            items: {
                type: 'object',
                properties: {
                    stepLabel: {
                        type: 'string',
                        example: 'Шаг 1'
                    },
                    isDone: {
                        type: 'boolean'
                    }
                }
            }
        },
        endingDate: {
            type: 'string',
            format: 'date',
            example: '2023-12-31'
        },
        location: {
            type: 'object',
            properties: {
                latitude: {
                    type: 'number',
                    example: 40.712776
                },
                longitude: {
                    type: 'number',
                    example: -74.005974
                },
                district: {
                    type: 'string',
                    example: 'Пресненский'
                },
                city: {
                    type: 'string',
                    example: 'Москва'
                }
            }
        },
        contacts: {
            type: 'object',
            properties: {
                email: {
                    type: 'string',
                    format: 'email',
                    example: 'contact@example.com'
                },
                phone: {
                    type: 'string',
                    example: '+123456789'
                },
                website: {
                    type: 'string',
                    example: 'https://example.com'
                }
            }
        },
        requesterType: {
            type: 'string',
            enum: ['person', 'organization']
        },
        helpType: {
            type: 'string',
            enum: ['finance', 'material']
        },
        helperRequirements: {
            type: 'object',
            properties: {
                helperType: {
                    type: 'string',
                    enum: ['group', 'single']
                },
                isOnline: {
                    type: 'boolean'
                },
                qualification: {
                    type: 'string',
                    enum: ['professional', 'common']
                }
            }
        },
        contributorsCount: {
            type: 'integer',
            example: 10
        },
        requestGoal: {
            type: 'integer',
            example: 10000
        },
        requestGoalCurrentValue: {
            type: 'integer',
            example: 2500
        }
    }
} as const;